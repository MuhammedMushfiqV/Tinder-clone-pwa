{"version":3,"sources":["Header.js","firebase.js","TinderCards.js","SwipeButtons.js","Chat.js","Chats.js","ChatScreen.js","App.js","index.js"],"names":["Header","backButton","history","useHistory","className","to","IconButton","onClick","replace","fontSize","src","alt","database","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TinderCards","useState","people","setPeople","useEffect","unsubscribe","collection","onSnapshot","snapshot","docs","map","doc","data","person","key","name","preventSwipe","style","backgroundImage","url","SwipeButtons","Chat","message","profilePic","timestamp","Avatar","Chats","ChatScreen","input","setInput","image","messages","setMessages","value","onChange","e","target","type","placeholder","preventDefault","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f4c028a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Header({ backButton }) {\r\n  const history = useHistory();\r\n  return (\r\n    // BEM\r\n    <div className=\"header\">\r\n      {backButton ? (\r\n        <Link to=\"/\">\r\n          <IconButton onClick={() => history.replace(backButton)}>\r\n            <ArrowBackIosIcon className=\"header__icon\" fontSize=\"large\" />\r\n          </IconButton>\r\n        </Link>\r\n      ) : (\r\n        <Link to=\"/\">\r\n          <IconButton>\r\n            <PersonIcon className=\"header__icon\" fontSize=\"large\" />\r\n          </IconButton>\r\n        </Link>\r\n      )}\r\n\r\n      <img\r\n        className=\"header__logo\"\r\n        src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\"\r\n        alt=\"tinder logo\"\r\n      />\r\n      <Link to=\"/chat\">\r\n        <IconButton>\r\n          <ForumIcon className=\"header__icon\" fontSize=\"large\" />\r\n        </IconButton>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDqwKKv_ds9TZkRwIRpgDYKqPv9rJh3Xcg\",\r\n    authDomain: \"tinder-clone-842aa.firebaseapp.com\",\r\n    databaseURL: \"https://tinder-clone-842aa.firebaseio.com\",\r\n    projectId: \"tinder-clone-842aa\",\r\n    storageBucket: \"tinder-clone-842aa.appspot.com\",\r\n    messagingSenderId: \"353774823159\",\r\n    appId: \"1:353774823159:web:f7c762659c589366e255f2\",\r\n    measurementId: \"G-D1MJYNZTWJ\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const database = firebaseApp.firestore();\r\n\r\n  export default database;","import React, { useState, useEffect } from \"react\";\r\nimport \"./TinderCards.css\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport database from \"./firebase\";\r\n\r\nfunction TinderCards() {\r\n  const [people, setPeople] = useState([]);\r\n\r\n  // piece of code which runs based on a condition\r\n  useEffect(() => {\r\n    //this is where the code runs..\r\n    const unsubscribe = database\r\n      .collection(\"people\")\r\n      .onSnapshot((snapshot) =>\r\n        setPeople(snapshot.docs.map((doc) => doc.data()))\r\n      );\r\n\r\n    return () => {\r\n      // this is the cleanup\r\n      unsubscribe();\r\n    };\r\n    // this will run once when the componet loads, and never again\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"tinderCards__cardContainer\">\r\n        {people.map((person) => (\r\n          <TinderCard\r\n            className=\"swipe\"\r\n            key={person.name}\r\n            preventSwipe={[\"up\", \"down\"]}\r\n          >\r\n            <div\r\n              style={{ backgroundImage: `url(${person.url})` }}\r\n              className=\"card\"\r\n            >\r\n              <h3>{person.name}</h3>\r\n            </div>\r\n          </TinderCard>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from \"react\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport \"./SwipeButtons.css\";\r\n\r\nconst SwipeButtons = () => {\r\n  return (\r\n    <div className=\"swipeButtons\">\r\n      <IconButton className=\"swipeButtons__repeat\">\r\n        <ReplayIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__left\">\r\n        <CloseIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__star\">\r\n        <StarRateIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__right\">\r\n        <FavoriteIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons__lightning\">\r\n        <FlashOnIcon fontSize=\"large\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SwipeButtons;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Chat.css\";\r\n\r\nconst Chat = ({ name, message, profilePic, timestamp }) => {\r\n  return (\r\n    <Link to={`/chat/${name}`}>\r\n    <div className=\"chat\">\r\n      <Avatar className=\"chat__image\" src={profilePic} />\r\n      <div className=\"chat__details\">\r\n        <h2>{name}</h2>\r\n        <p>{message}</p>\r\n      </div>\r\n      <p className=\"chat__timestamp\">{timestamp}</p>\r\n    </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport Chat from \"./Chat\";\r\nimport \"./Chats.css\";\r\n\r\nconst Chats = () => {\r\n  return (\r\n    <div className=\"chats\">\r\n      <Chat\r\n        name=\"Mark\"\r\n        message=\"yo whats up!\"\r\n        timestamp=\"40 seconds ago\"\r\n        profilePic=\"https://images.performgroup.com/di/library/omnisport/6d/d2/lionelmessi-cropped_926ayd3kah10122bz2frjwfvv.jpg?t=1107407133&quality=100\"\r\n      />\r\n      <Chat\r\n        name=\"Elen\"\r\n        message=\"Hello\"\r\n        timestamp=\"1 hour ago\"\r\n        profilePic=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Elon_Musk_Royal_Society.jpg\"\r\n      />\r\n      <Chat\r\n        name=\"pari\"\r\n        message=\"Nice!\"\r\n        timestamp=\"46 seconds ago\"\r\n        profilePic=\"https://www.indiantelevision.com/sites/default/files/styles/smartcrop_800x800/public/images/tv-images/2019/06/11/parineeti.jpg?itok=-Ei62BmZ\"\r\n      />\r\n      <Chat\r\n        name=\"dq\"\r\n        message=\"yo where are you\"\r\n        timestamp=\"3 days ago\"\r\n        profilePic=\"https://th.bing.com/th/id/OIP.ANJ-QOEOMjpNuJm8OnTvsQHaIG?pid=Api&rs=1\"\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./ChatScreen.css\";\r\n\r\nfunction ChatScreen() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      name: \"Elen\",\r\n      image:\r\n        \"https://upload.wikimedia.org/wikipedia/commons/e/ed/Elon_Musk_Royal_Society.jpg\",\r\n      message: \"Whats up\",\r\n    },\r\n    {\r\n      name: \"Elen\",\r\n      image:\r\n        \"https://upload.wikimedia.org/wikipedia/commons/e/ed/Elon_Musk_Royal_Society.jpg\",\r\n      message: \"How is going!\",\r\n    },\r\n    {\r\n      message: \"Hi! How are you Elen\",\r\n    },\r\n  ]);\r\n\r\n  const handleSend = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessages([...messages, { message: input }]);\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <div className=\"chatScreen\">\r\n      <p className=\"chatScreen_timestamp\">YOU MATCHED WITH ELEN ON 10/08/20</p>\r\n      {messages.map((message) =>\r\n        message.name ? (\r\n          <div className=\"chatScreen_message\">\r\n            <Avatar\r\n              className=\"chatScreen__image\"\r\n              alt={message.name}\r\n              src={message.image}\r\n            />\r\n            <p className=\"chatScreen__text\">{message.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"chatScreen_message\">\r\n            <p className=\"chatScreen__textUser\">{message.message}</p>\r\n          </div>\r\n        )\r\n      )}\r\n\r\n      <form className=\"chatScreen_input\">\r\n        <input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          className=\"chatScreen_inputField\"\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button\r\n          onClick={handleSend}\r\n          type=\"submit\"\r\n          className=\"chatScreen_inputButton\"\r\n        >\r\n          SEND\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatScreen;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport TinderCards from \"./TinderCards\";\nimport SwipeButtons from \"./SwipeButtons\";\nimport Chats from \"./Chats\";\nimport ChatScreen from \"./ChatScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/chat/:person\">\n            <Header backButton=\"/chat\" />\n            <ChatScreen />\n          </Route>\n          <Route path=\"/chat\">\n            <Header backButton=\"/\" />\n            <Chats />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <TinderCards />\n            <SwipeButtons />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}